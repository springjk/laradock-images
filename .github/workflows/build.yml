name: CI

on: [push, pull_request]

jobs:
  build-php:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        php_version: ["7.4", "8.0", "8.1", "8.2", "8.3"]
        service: ["php-fpm", "php-worker", "workspace"]
    steps:
    - uses: actions/checkout@v4
    - name: Setup environment
      run: |
        # 检查必要的命令
        echo "=== 检查环境 ==="
        docker --version
        
        # 检查docker compose命令（新版本）
        if docker compose version > /dev/null 2>&1; then
          echo "Docker Compose (plugin): $(docker compose version)"
        elif docker-compose --version > /dev/null 2>&1; then
          echo "Docker Compose (standalone): $(docker-compose --version)"
        else
          echo "⚠️  Neither 'docker compose' nor 'docker-compose' found"
        fi
        
        git --version
        
        # 设置Git配置优化大仓库克隆
        git config --global http.postBuffer 524288000
        git config --global http.lowSpeedLimit 1000
        git config --global http.lowSpeedTime 300
        
        # 给脚本添加执行权限
        chmod +x build-image.sh
        
        echo "=== 环境检查完成 ==="
    
    - name: Build the Docker image
      env:
        PHP_VERSION: ${{ matrix.php_version }}
        BUILD_SERVICE: ${{ matrix.service }}
        DOCKER_USERNAME: ${{ secrets.DOCKER_USERNAME }}
        DOCKER_PASSWORD: ${{ secrets.DOCKER_PASSWORD }}
        ALIYUN_DOCKER_USERNAME: ${{ secrets.ALIYUN_DOCKER_USERNAME }}
        ALIYUN_DOCKER_PASSWORD: ${{ secrets.ALIYUN_DOCKER_PASSWORD }}
      run: |
        echo "开始构建 PHP ${{ matrix.php_version }} - ${{ matrix.service }}"
        ./build-image.sh
  build-mysql:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        mysql_version: ["5.7", "8.0"]
        service: ["mysql"]
    steps:
    - uses: actions/checkout@v4
    - name: Setup environment
      run: |
        echo "=== 检查环境 (MySQL构建) ==="
        docker --version
        
        # 检查docker compose命令
        if docker compose version > /dev/null 2>&1; then
          echo "Docker Compose (plugin): $(docker compose version)"
        elif docker-compose --version > /dev/null 2>&1; then
          echo "Docker Compose (standalone): $(docker-compose --version)"
        fi
        
        git config --global http.postBuffer 524288000
        chmod +x build-image.sh
    - name: Build the Docker image
      env:
        MYSQL_VERSION: ${{ matrix.mysql_version }}
        BUILD_SERVICE: ${{ matrix.service }}
        DOCKER_USERNAME: ${{ secrets.DOCKER_USERNAME }}
        DOCKER_PASSWORD: ${{ secrets.DOCKER_PASSWORD }}
        ALIYUN_DOCKER_USERNAME: ${{ secrets.ALIYUN_DOCKER_USERNAME }}
        ALIYUN_DOCKER_PASSWORD: ${{ secrets.ALIYUN_DOCKER_PASSWORD }}
      run: ./build-image.sh
  build-other:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        service: ["redis", "mongo", "nginx", "elasticsearch"]
    steps:
    - uses: actions/checkout@v4
    - name: Setup environment
      run: |
        echo "=== 检查环境 (其他服务构建) ==="
        docker --version
        
        # 检查docker compose命令
        if docker compose version > /dev/null 2>&1; then
          echo "Docker Compose (plugin): $(docker compose version)"
        elif docker-compose --version > /dev/null 2>&1; then
          echo "Docker Compose (standalone): $(docker-compose --version)"
        fi
        
        git config --global http.postBuffer 524288000
        chmod +x build-image.sh
    - name: Build the Docker image
      env:
        BUILD_SERVICE: ${{ matrix.service }}
        DOCKER_USERNAME: ${{ secrets.DOCKER_USERNAME }}
        DOCKER_PASSWORD: ${{ secrets.DOCKER_PASSWORD }}
        ALIYUN_DOCKER_USERNAME: ${{ secrets.ALIYUN_DOCKER_USERNAME }}
        ALIYUN_DOCKER_PASSWORD: ${{ secrets.ALIYUN_DOCKER_PASSWORD }}
      run: ./build-image.sh
